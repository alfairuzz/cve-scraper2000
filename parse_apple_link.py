from requests_html import HTMLSession
from bs4 import BeautifulSoup
import pandas as pd


def get_apple_details(soup):
    print('getting apple data')
    
    # Find all paragraphs with the class 'gb-paragraph'
    paragraphs = soup.find_all('p', class_='gb-paragraph')

    # Keywords for relevant information
    keywords = ['Available for', 'Impact', 'Description', 'CVE']

    # Phrases to exclude from the results
    exclude_phrases = [
        'This document describes', 
        'For our customers\' protection', 
        'Apple security documents', 
        'For more information about security', 
        'Released'
    ]

    # Initialize lists for storing information
    available_for_list = []
    impact_list = []
    description_list = []
    cve_list = []

    # Temporary variables to store data
    available_for = None
    impact = None
    description = None
    cve = None

    # Filter and populate the lists with relevant data
    for paragraph in paragraphs:
        text = paragraph.get_text().strip()
        
        # Check if the paragraph contains any of the relevant keywords and exclude unwanted content
        if any(keyword in text for keyword in keywords) and not any(exclude_phrase in text for exclude_phrase in exclude_phrases):
            
            # Identify and store the relevant information
            if 'Available for' in text:
                available_for = text.split('Available for: ')[-1]
            elif 'Impact' in text:
                impact = text.split('Impact: ')[-1]
            elif 'Description' in text:
                description = text.split('Description: ')[-1]
            elif 'CVE' in text:
                cve = text.split(':')[0]
                
                # Once we reach the CVE number, append the row data to the lists
                available_for_list.append(available_for)
                impact_list.append(impact)
                description_list.append(description)
                cve_list.append(cve)

    # Create a DataFrame
    df = pd.DataFrame({
        'Available for': available_for_list,
        'Impact': impact_list,
        'Description': description_list,
        'CVE': cve_list
    })

    return df